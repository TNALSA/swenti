{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-586552f1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"article-container\"\n};\nconst _hoisted_2 = {\n  class: \"article-header\"\n};\nconst _hoisted_3 = {\n  class: \"article-title\"\n};\nconst _hoisted_4 = {\n  class: \"article-meta\"\n};\nconst _hoisted_5 = {\n  class: \"article-content\"\n};\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString($data.info.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"small\", null, _toDisplayString($data.info.writer), 1 /* TEXT */), _createElementVNode(\"small\", null, _toDisplayString($data.formattedDate), 1 /* TEXT */)])]), _createElementVNode(\"section\", _hoisted_5, [$data.info.images['image1'] ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $data.info.images['image1'],\n    alt: \"Article Image\",\n    height: \"225\",\n    width: \"100%\"\n  }, null, 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, _toDisplayString($data.info.details), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","info","title","_hoisted_4","writer","formattedDate","_hoisted_5","images","key","src","alt","height","width","_hoisted_6","_createCommentVNode","details"],"sources":["C:\\Users\\msa18\\swenti\\swenti-frontend\\src\\views\\ArticleView.vue"],"sourcesContent":["<template>\r\n  <div class=\"article-container\">\r\n    <section class=\"article-header\">\r\n      <div class=\"article-title\">\r\n        <h1>{{ info.title }}</h1>\r\n      </div>\r\n      <div class=\"article-meta\">\r\n        <small>{{ info.writer }}</small>\r\n        <small>{{ formattedDate }}</small>\r\n      </div>\r\n    </section>\r\n    <section class=\"article-content\">\r\n      <img v-if=\"info.images['image1']\" :src=\"info.images['image1']\" alt=\"Article Image\" height=\"225\" width=\"100%\"/>\r\n      <p>{{ info.details }}</p>\r\n    </section>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  name: 'ArticleView',\r\n  props: {\r\n    articleId: {\r\n      type: [String, Number], // 타입을 String 또는 Number로 변경\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cur_articleId: this.articleId,\r\n      info: {}, // 객체 형태로 초기화\r\n      formattedDate: '' // String 형태로 초기화\r\n    };\r\n  },\r\n  mounted() {\r\n    const cur_articleId = this.cur_articleId;\r\n    const router = useRouter();\r\n    console.log(\"요청하신 글 번호: \", cur_articleId);\r\n\r\n    axios.get(`http://localhost:8080/lookup/details/${cur_articleId}`).then(response => {\r\n      console.log(\"응답받은 데이터: \", response.data);\r\n      this.info = response.data.article;\r\n      this.formattedDate = this.formatDate(this.info.writed_date);\r\n      router.push(`/article/${cur_articleId}`);\r\n    }).catch(error => {\r\n      console.error(\"[Error]\", error);\r\n    });\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth() + 1; // 월은 0부터 시작하므로 +1 필요\r\n      const day = date.getDate();\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const seconds = date.getSeconds();\r\n\r\n      return `${year}년 ${month}월 ${day}일 ${hours}시 ${minutes}분 ${seconds}초`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.article-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.article-header {\r\n  border-bottom: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.article-title h1 {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.article-meta small {\r\n  display: block;\r\n  color: #888;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.article-content p {\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.article-content {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAmB;;EACnBA,KAAK,EAAC;AAAgB;;EACxBA,KAAK,EAAC;AAAe;;EAGrBA,KAAK,EAAC;AAAc;;EAKlBA,KAAK,EAAC;AAAiB;mBAXpC;;uBACEC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAQU,WARVC,UAQU,GAPRD,mBAAA,CAEM,OAFNE,UAEM,GADJF,mBAAA,CAAyB,YAAAG,gBAAA,CAAlBC,KAAA,CAAAC,IAAI,CAACC,KAAK,iB,GAEnBN,mBAAA,CAGM,OAHNO,UAGM,GAFJP,mBAAA,CAAgC,eAAAG,gBAAA,CAAtBC,KAAA,CAAAC,IAAI,CAACG,MAAM,kBACrBR,mBAAA,CAAkC,eAAAG,gBAAA,CAAxBC,KAAA,CAAAK,aAAa,iB,KAG3BT,mBAAA,CAGU,WAHVU,UAGU,GAFGN,KAAA,CAAAC,IAAI,CAACM,MAAM,c,cAAtBb,mBAAA,CAA8G;IAZpHc,GAAA;IAYyCC,GAAG,EAAET,KAAA,CAAAC,IAAI,CAACM,MAAM;IAAYG,GAAG,EAAC,eAAe;IAACC,MAAM,EAAC,KAAK;IAACC,KAAK,EAAC;0BAZ5GC,UAAA,KAAAC,mBAAA,gBAaMlB,mBAAA,CAAyB,WAAAG,gBAAA,CAAnBC,KAAA,CAAAC,IAAI,CAACc,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}